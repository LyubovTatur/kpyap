using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


//    Программно промоделировать сдачу зачета студентами.
//    Каждый студент характеризуется ФИО и количеством
//    посещенных занятий.Также известно количество 
//    общих занятий = 20.Студенты делятся на обычных,
//    сообразительных и гениев (потомки класса студент).
//    Для каждого человека определите полиморфный метод «Сдать зачет» без параметров,
//    возвращающих логическое значение(сдал – true, не сдал – false).
//    Обычные студенты точно сдают зачет, если посетили все занятия,
//    если были более чем на половине занятий, то сдают с вероятностью 0,5;
//    иначе не сдают.Сообразительные студенты тоже точно сдают зачет,
//    если посетили все занятия, если были более чем на половине занятий,
//    то сдают с вероятностью 0,7;
//    иначе не сдают зачет Гении точно сдают зачет,
//    если были хотя бы на одном занятии, иначе не сдают.
//    Создайте массив из 10 студентов (5 обычных, 4 сообразительных и 1 гения),
//    задайте их ФИО и количество посещенных занятий константами,
//    указанными в конструкторах объектов и промоделируйте сдачу
//    зачета с выводом подробных результатов(всех сведений о студентах,
//    а также результате сдачи).

namespace doplaba10
{
    class Soobraz : Student
    {
        public Soobraz(string fIO, int kolvo) : base(fIO, kolvo)
        {
        }

        public bool Zachet()
        {
            if (kolvo > TotalKolvo || kolvo < 0)
                {
                    Console.WriteLine("ошибка");
                }
            if (kolvo == TotalKolvo)
            {
                return true;
            }
            else
            {
                if (kolvo > TotalKolvo/2)
                {
                    Random r = new Random();
                    if (r.Next(10) < 7 )
                    {
                        return true;
                    }
                    else
                    {
                        return false;
                    }
                }
                else return false;
               
            }
        }
    }
}
